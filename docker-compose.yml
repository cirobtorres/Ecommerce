
services:
  postgres:
    image: postgres:16
    container_name: db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: backend
    environment:
      DATABASE_URL: ${DATABASE_URL}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "3001:3000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/backend/src:/app/apps/backend/src
      # - ./packages:/app/packages
      - ./turbo.json:/app/turbo.json
      - ./tsconfig.json:/app/tsconfig.json
      # - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./package.json:/app/package.json
      - ./.pnpm-store:/app/.pnpm-store
    working_dir: /app/apps/backend

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: web
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - .:/app
      - ./.pnpm-store:/app/.pnpm-store
      - /app/node_modules
    working_dir: /app/apps/web
    # command: pnpm dev

volumes:
  pgdata:
  redis_data:
  pnpm-store:
